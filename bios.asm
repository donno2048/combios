%defstr file COM
mov dx, 0x3c2
mov al, 0xc3
out dx, al
mov al, 0x60
out 0x64, al
out 0x60, al
mov WORD [0x40], clear
mov WORD [0x42], cs
call setup_screen
mov cx, 0xff
mov si, 0x100
mov ax, cs
mov ds, ax
mov es, ax
jmp _start
times ($$-$+0x100) db 0
_start: incbin file
hlt
setup_screen:
    push cs
    pop ds
    mov cx, 0x4
    xor si, si
.sequ_loop:
    inc si
    mov dx, 0x3c4
    mov ax, si
    out dx, al
    inc dx
    mov al, [sequ+si-1]
    out dx, al
    loop .sequ_loop
    mov cx, 0x9
    xor si, si
.grdc_loop:
    mov dx, 0x3ce
    mov ax, si
    out dx, al
    inc dx
    mov al, [grdc+si]
    out dx, al
    inc si
    loop .grdc_loop
    mov cx, 0x19
    xor si, si
.crtc_loop:
    mov dx, 0x3d4
    mov ax, si
    out dx, al
    inc dx
    mov al, [crtc+si]
    out dx, al
    inc si
    loop .crtc_loop
    mov dx, 0x3c0
    mov al, 0x20
    out dx, al
    push 0xb800
    pop es
    mov ax, 0x720
    mov cx, 0x4000
    xor di, di
    rep stosw
    ret
clear:
    pusha
    push es
    push 0xb800
    pop es
    mov ax, 0x720
    mov cx, 0x410
    xor di, di
    rep stosw
    pop es
    popa
    iret
sequ: db 0x08, 0x03, 0x00, 0x02
grdc: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0e, 0x0f, 0xff
crtc: db 0x2d, 0x27, 0x28, 0x90, 0x2b, 0xa0, 0xbf, 0x1f, \
         0x00, 0x4f, 0x0d, 0x0e, 0x00, 0x00, 0x00, 0x00, \
         0x9c, 0x8e, 0x8f, 0x14, 0x1f, 0x96, 0xb9, 0xa3, 0xff
times ($$-$+0xfff0) db 0
db 0xea, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x99
